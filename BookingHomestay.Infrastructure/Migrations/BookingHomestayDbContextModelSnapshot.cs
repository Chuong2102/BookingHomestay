// <auto-generated />
using System;
using BookingHomestay.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;

#nullable disable

namespace BookingHomestay.Infrastructure.Migrations
{
    [DbContext(typeof(BookingHomestayDbContext))]
    partial class BookingHomestayDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.27")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BookingHomestay.Domain.Entities.Room.Room", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<double>("Area")
                        .HasColumnType("float");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("ProvinceID")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ProvinceID");

                    b.ToTable("Rooms", (string)null);

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Area = 100.0,
                            Description = "Homestay gia re",
                            Price = 500000m,
                            Title = "Homestay gia re gan trung tam thanh pho Hue",
                            UserID = 1
                        });
                });

            modelBuilder.Entity("BookingHomestay.Domain.Entities.RoomAggregate.Province", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Provinces", (string)null);
                });

            modelBuilder.Entity("BookingHomestay.Domain.Entities.Room.Room", b =>
                {
                    b.HasOne("BookingHomestay.Domain.Entities.RoomAggregate.Province", "Province")
                        .WithMany()
                        .HasForeignKey("ProvinceID");

                    b.OwnsOne("BookingHomestay.Domain.Entities.Room.Room.Address#BookingHomestay.Domain.Entities.Room.Address", "Address", b1 =>
                        {
                            b1.Property<int>("RoomID")
                                .HasColumnType("int");

                            b1.Property<string>("AddressLine1")
                                .HasColumnType("nvarchar(max)");

                            b1.Property<string>("AddressLine2")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.Property<string>("City")
                                .HasMaxLength(100)
                                .HasColumnType("nvarchar(100)");

                            b1.Property<string>("PostalCare")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("RoomID");

                            b1.ToTable("Rooms", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("RoomID");
                        });

                    b.OwnsOne("BookingHomestay.Domain.Entities.Room.Room.Location#BookingHomestay.Domain.Entities.RoomAggregate.Location", "Location", b1 =>
                        {
                            b1.Property<int>("RoomID")
                                .HasColumnType("int");

                            b1.Property<double?>("Latitude")
                                .HasColumnType("float");

                            b1.Property<Point>("LocationPoint")
                                .HasColumnType("geography");

                            b1.Property<double?>("Longitude")
                                .HasColumnType("float");

                            b1.Property<string>("PlaceID")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("RoomID");

                            b1.ToTable("Rooms", (string)null);

                            b1.WithOwner()
                                .HasForeignKey("RoomID");
                        });

                    b.Navigation("Address");

                    b.Navigation("Location");

                    b.Navigation("Province");
                });
#pragma warning restore 612, 618
        }
    }
}
